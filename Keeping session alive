def read_config(file_path):
    """Reads a configuration file and returns the value of auditCustomMappingKeys as a dictionary."""
    try:
        with open(file_path, 'r') as file:
            content = file.read()
        
        config_dict = {}
        
        # Split content into lines and parse into a dictionary
        lines = content.split('\n')
        for line in lines:
            if '=' in line or ':' in line:
                key, value = re.split(r'\s*[=:]\s*', line, 1)
                config_dict[key.strip()] = value.strip().strip('"')
        
        # Extract auditCustomMappingKeys and convert it to a dictionary
        audit_key = config_dict.get('auditCustomMappingKeys')
        if audit_key:
            try:
                keys_dict = ast.literal_eval(audit_key)
                return {"auditCustomMappingKeys": keys_dict}
            except (SyntaxError, ValueError) as e:
                logger.error(f"Error parsing auditCustomMappingKeys: {e}")
                return {}
