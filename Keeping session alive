df = spark.read \
    .option("header", True) \
    .option("nullValue", "SomeUnusedString") \
    .option("emptyValue", "") \
    .csv("data.csv")


df = spark.read \
    .option("header", True) \
    .option("nullValue", "UNUSED_PLACEHOLDER") \  # Set to a value not in your data
    .option("emptyValue", "") \                    # Explicitly map empty CSV fields to ""
    .csv("path/to/file.csv")


df = spark.read \
    .option("header", True) \
    .option("emptyValue", "") \  # This will convert empty fields to empty strings
    .csv("path/to/file.csv")

df = spark.read \
    .option("header", True) \
    .option("treatEmptyValuesAsNulls", "false") \  # Don't treat empty values as nulls
    .csv("path/to/file.csv")
with open(filepath2, 'r') as f:
    print(repr(f.read()))
df7 = spark.read \
    .option("header", True) \
    .option("nullValue", "\0") \  # Using null byte as nullValue
    .option("emptyValue", "") \
    .csv(filepath2)
df = spark.read \
    .option("header", True) \
    .option("nullValue", "\u0000") \  # Using a character that won't appear in your data
    .csv("sample.data")
df = spark.read.format("text") \
    .load("your_file_path") \
    .select(
        substring(col("value"), 1, 6).alias("MONTH_ID"),
        substring(col("value"), 7, 16).alias("MBR_ID"),
        substring(col("value"), 23, 8).alias("STATUS_DATE"),
        substring(col("value"), 31, 1).alias("MBR_STATUS"),
        substring(col("value"), 32, 20).alias("REGISTRATION_CHANNEL"),
        substring(col("value"), 52, 4).alias("REGISTERED_IND"),
        substring(col("value"), 56, 1).alias("REGISTRATION_CHANNEL_TAG"),
        substring(col("value"), 57, 1).alias("SOURCE_ID")
    )
