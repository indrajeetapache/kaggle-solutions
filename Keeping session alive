import org.apache.spark.sql.SparkSession
import com.mongodb.spark.MongoSpark
import com.mongodb.spark.config.ReadConfig
import org.bson.Document
import java.text.SimpleDateFormat
import java.util.Date

object MongoDateFilterExample {
  def main(args: Array[String]): Unit = {
    val spark = SparkSession.builder()
      .appName("MongoDB Date Filter")
      .master("local[*]") // Adjust this as per your environment
      .config("spark.mongodb.input.uri", "mongodb://127.0.0.1/test.myCollection") // Replace with your MongoDB URI
      .getOrCreate()

    val currentDate = new SimpleDateFormat("yyyy-MM-dd").format(new Date())

    val matchStage = new Document("$match", new Document("dateField", currentDate))

    val pipeline = Seq(matchStage)

    val readConfig = ReadConfig(Map("collection" -> "myCollection", "readPreference.name" -> "secondaryPreferred"), Some(ReadConfig(spark)))

    val df = MongoSpark.load(spark, readConfig, pipeline)

    df.show()

    spark.stop()
  }
}
