import org.apache.spark.sql.execution.QueryExecution
import org.apache.spark.sql.util.QueryExecutionListener
import scala.collection.JavaConverters._

class SparkQueryListener extends QueryExecutionListener {
  override def onSuccess(funcName: String, qe: QueryExecution, durationNs: Long): Unit = {
    val id = qe.id
    val stats = qe.stringWithStats
    println(s"Query Stats: $stats")
    println(s"Query Id: $id")

    val it = qe.executedPlan.metrics.iterator.asScala
    while (it.hasNext) {
      val tuple2 = it.next()
      println(s"Metric - ${tuple2._1}: ${tuple2._2}")
    }
  }

  override def onFailure(funcName: String, qe: QueryExecution, exception: Exception): Unit = {
    val it = qe.executedPlan.metrics.iterator.asScala
    println(s"Exception - ${exception.getMessage}")

    while (it.hasNext) {
      val tuple2 = it.next()
      println(s"${tuple2._1}: ${tuple2._2}")
    }
  }
}
