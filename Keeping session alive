import json
from pymongo import MongoClient

class MongoDBOperations:
    def __init__(self, config_path):
        self.config_path = config_path
        self.client = None
        self.db = None
        self.collection = None
        self.config = self.load_config()

    def load_config(self):
        """Load the configuration from a JSON file."""
        with open(self.config_path, 'r') as file:
            return json.load(file)

    def connect(self):
        """Connect to MongoDB using settings from the config file."""
        connection_string = self.config['connection_string']
        self.client = MongoClient(connection_string)
        self.db = self.client[self.config['database']]
        self.collection = self.db[self.config['collection']]
        print("Connected to MongoDB:", connection_string)

    def query(self):
        """Perform a query on the MongoDB collection using the query from config."""
        query = self.config['query']
        documents = self.collection.find(query)
        return list(documents)  # Convert cursor to list

    @staticmethod
    def main():
        """Main method to be the entry point of the script."""
        mongo_operations = MongoDBOperations('config.json')
        mongo_operations.connect()
        documents = mongo_operations.query()
        for document in documents:
            print(document)

# This allows the script to be run directly from the command line
if __name__ == "__main__":
    MongoDBOperations.main()


{
    "connection_string": "mongodb://localhost:27017/",
    "database": "your_database_name",
    "collection": "map_audit_job_status",
    "query": {
        "$or": [
            {"audit_pipeline_id": {"$regex": "^IBS1234.*"}},
            {"audit_pipeline_id": {"$regex": "^IBS987.*"}}
        ]
    }
}




import argparse
parser = argparse.ArgumentParser(description="Demo Script")
parser.add_argument('--environment', type=str, default='DEV', choices=['DEV', 'PROD', 'UAT'],
                        help='Specifies the environment to operate in (default: DEV)')
args = parser.parse_args()
environment = args.environment
